name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  ARTIFACT_VERSION: ${{ github.run_id }}.${{ github.run_number }}.${{ github.run_attempt }}

permissions:
  actions: read
  contents: read

jobs:
  prepare:
    name: Prepare & Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Enable Nx Cloud
        run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build,build-storybook"
      - name: Install Packages
        run: npm run ci:install
      - name: Format
        run: npm run ci:checks:format
      - name: Lint
        run: npm run ci:checks:lint
      - name: Test
        run: npm run ci:checks:test
      - name: Build
        run: npm run ci:build
      - name: Build Storybook
        run: npm run ci:build-storybook
      - name: Archive Site Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: site_${{ env.ARTIFACT_VERSION }}
          path: |
            dist/apps/nesto
      - name: Archive Storybook Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: storybook_${{ env.ARTIFACT_VERSION }}
          path: |
            dist/storybook/storybook-host
      # - name: Archive Code Coverage Results
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: code-coverage-report
      #     path: output/test/code-coverage.html
      - name: Install Netlify
        run: npm install netlify-cli -g
      - name: Deploy Site
        id: netlify_deploy_site
        run: |
          netlify deploy \
            --dir dist/apps/nesto \
            --site ${{ secrets.NETLIFY_SITE_ID }} \
            --auth ${{ secrets.NETLIFY_API_TOKEN }}
      - name: Deploy Storybook
        id: netlify_deploy_storybook
        run: |
          netlify deploy \
            --dir dist/storybook/storybook-host \
            --site ${{ secrets.NETLIFY_STORYBOOK_SITE_ID }} \
            --auth ${{ secrets.NETLIFY_API_TOKEN }}
            --prod
